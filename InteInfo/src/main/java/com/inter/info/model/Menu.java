package com.inter.info.model;

// Generated 2014-2-22 21:58:09 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Menu generated by hbm2java
 */
@Entity
@Table(name = "menu", catalog = "interinfo")
public class Menu implements java.io.Serializable {

	private Integer menuId;
	private Menu menu;
	private String menuName;
	private Boolean menustatus;
	private String urlAction;
	private String icon;
	private Date createDate;
	private String createBy;
	private Date updateDate;
	private String updateBy;
	private Set<Accessmenu> accessmenusForParMenuId = new HashSet<Accessmenu>(0);
	private Set<Menu> menus = new HashSet<Menu>(0);
	private Set<Commonlymenu> commonlymenus = new HashSet<Commonlymenu>(0);
	private Set<Accessmenu> accessmenusForSubMenuId = new HashSet<Accessmenu>(0);

	public Menu() {
	}

	public Menu(Menu menu, String menuName, Boolean menustatus, String urlAction, String icon, Date createDate,
			String createBy, Date updateDate, String updateBy, Set<Accessmenu> accessmenusForParMenuId,
			Set<Menu> menus, Set<Commonlymenu> commonlymenus, Set<Accessmenu> accessmenusForSubMenuId) {
		this.menu = menu;
		this.menuName = menuName;
		this.menustatus = menustatus;
		this.urlAction = urlAction;
		this.icon = icon;
		this.createDate = createDate;
		this.createBy = createBy;
		this.updateDate = updateDate;
		this.updateBy = updateBy;
		this.accessmenusForParMenuId = accessmenusForParMenuId;
		this.menus = menus;
		this.commonlymenus = commonlymenus;
		this.accessmenusForSubMenuId = accessmenusForSubMenuId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "menuID", unique = true, nullable = false)
	public Integer getMenuId() {
		return this.menuId;
	}

	public void setMenuId(Integer menuId) {
		this.menuId = menuId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parentID")
	public Menu getMenu() {
		return this.menu;
	}

	public void setMenu(Menu menu) {
		this.menu = menu;
	}

	@Column(name = "menuName", length = 50)
	public String getMenuName() {
		return this.menuName;
	}

	public void setMenuName(String menuName) {
		this.menuName = menuName;
	}

	@Column(name = "menustatus")
	public Boolean getMenustatus() {
		return this.menustatus;
	}

	public void setMenustatus(Boolean menustatus) {
		this.menustatus = menustatus;
	}

	@Column(name = "urlAction", length = 300)
	public String getUrlAction() {
		return this.urlAction;
	}

	public void setUrlAction(String urlAction) {
		this.urlAction = urlAction;
	}

	@Column(name = "icon", length = 400)
	public String getIcon() {
		return this.icon;
	}

	public void setIcon(String icon) {
		this.icon = icon;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createDate", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "createBy", length = 50)
	public String getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateDate", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "updateBy", length = 50)
	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "menuByParMenuId")
	public Set<Accessmenu> getAccessmenusForParMenuId() {
		return this.accessmenusForParMenuId;
	}

	public void setAccessmenusForParMenuId(Set<Accessmenu> accessmenusForParMenuId) {
		this.accessmenusForParMenuId = accessmenusForParMenuId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "menu")
	public Set<Menu> getMenus() {
		return this.menus;
	}

	public void setMenus(Set<Menu> menus) {
		this.menus = menus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "menu")
	public Set<Commonlymenu> getCommonlymenus() {
		return this.commonlymenus;
	}

	public void setCommonlymenus(Set<Commonlymenu> commonlymenus) {
		this.commonlymenus = commonlymenus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "menuBySubMenuId")
	public Set<Accessmenu> getAccessmenusForSubMenuId() {
		return this.accessmenusForSubMenuId;
	}

	public void setAccessmenusForSubMenuId(Set<Accessmenu> accessmenusForSubMenuId) {
		this.accessmenusForSubMenuId = accessmenusForSubMenuId;
	}

}
